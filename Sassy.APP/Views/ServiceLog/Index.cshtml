@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="main" v-cloak>
    <div class="main-top" v-html="navMenu.html"></div>
    <div class="main-search">
        <form id="SearchForm" method="post">
            <div class="search-condition">
                <ul>
                    <li>
                        <el-select size="small" clearable placeholder="--全部服务--" v-model="searchParams.type">
                            <el-option v-for="item in custom.typeOptions"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </li>
                    <li>
                        <el-select size="small" clearable placeholder="--全部等级--" v-model="searchParams.level">
                            <el-option v-for="item in custom.levelOptions"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </li>
                    <li>
                        <el-input size="small" prefix-icon="el-icon-search" class="input-medium" v-model="searchParams.keyword" placeholder="搜索关键字" clearable></el-input>
                    </li>
                    <li>
                        <el-date-picker size="small" type="date" placeholder="开始时间" value-format="yyyy-MM-dd" v-model="searchParams.time1"></el-date-picker>
                        -
                        <el-date-picker size="small" type="date" placeholder="结束时间" value-format="yyyy-MM-dd" v-model="searchParams.time2"></el-date-picker>
                    </li>
                    <li>
                        <el-button size="mini" type="primary" :loading="searchBar.searchBtn.loading" v-on:click="search">查询<i class="el-icon-search el-icon--right"></i></el-button>
                    </li>
                </ul>
            </div>
        </form>
    </div>
    <div class="main-list">
        <div class="main-list-toolbar">
            <a href="javascript:void(0)" v-on:click="refresh"><i class="el-icon-refresh text-info"></i>刷新</a>
        </div>
        <div class="main-list-grid">
            <el-table :data="grid.data"
                      :height="grid.height"
                      ref="mainGrid"
                      v-loading="grid.loading"
                      stripe
                      size="small"
                      style="width:100%">
                <el-table-column prop="s1" label="服务类别"></el-table-column>
                <el-table-column prop="s2" label="日志等级"></el-table-column>
                <el-table-column prop="s3" label="信息">
                    <template slot-scope="scope">
                        <span v-html="scope.row.s3"></span>
                    </template>
                </el-table-column>
                <el-table-column prop="s4" label="创建时间"></el-table-column>
            </el-table>
        </div>
        <div class="main-list-pagination">
            <el-pagination v-on:size-change="pageSizeChange"
                           v-on:current-change="pageCurrentChange"
                           :current-page="pagination.currentPage"
                           :page-sizes="pagination.pageList"
                           :page-size="pagination.pageSize"
                           layout="sizes, prev, pager, next, jumper,total"
                           :total="pagination.totalCount">
            </el-pagination>
        </div>
    </div>
</div>
@section scripts {
    <script type="text/javascript">
        var appVue = new Vue({
            el: '.main',
            mixins:[elementExtend.Grid.MixinVue()],
            data: {
                grid: {
                    url:'@Url.Action("Index_Message", "ServiceLog")'
                },
                searchParams: {
                    type: '',
                    level:'',
                    keyword: '',
                    time1: '',
                    time2: ''
                },
                custom:{
                    typeOptions: [],
                    levelOptions: []
                }
            },
            created: function () {
                this.initData();
            },
            mounted: function(){
            },
            watch: {
                'searchParams.time1': {
                    handler: function (newVal, oldVal) {
                        if (newVal == null) {
                            this.searchParams.time1 = '';
                        }
                    },
                },
                'searchParams.time2': {
                    handler: function (newVal, oldVal) {
                        if (newVal == null) {
                            this.searchParams.time2 = '';
                        }
                    },
                },
                immediate: true,
                deep: true
            },
            methods: {
                initData() {
                    let $vue = this;
                    elementExtend.Base.ParseData({
                        url: '@Url.Action("Initialize_Info", "ServiceLog")',
                        params: {
                            type:'index'
                        },
                        success: function (data) {
                            //导航栏
                            $vue.navMenu.html = data.navMenu;
                            //工具栏
                            $vue.permission.permissionTools = data.userAuthorization;
                            elementExtend.Grid.Toolbar({
                                vue: $vue
                            });
                            //数据集合
                            $vue.custom.typeOptions = data.moduleList;
                            $vue.custom.levelOptions = data.logLevelList;
                            //查询信息
                            $vue.getGridList();
                        }
                    });
                },
                search: function () {
                    elementExtend.Grid.Search({
                        vue:this
                    });
                },
                refresh: function() {
                    this.getGridList();
                }
            }
        });
    </script>
}

